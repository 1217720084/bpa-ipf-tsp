%!PS                                                                                      
%%DocumentFonts: (atend)                                                                  
%%Title: PowerFlow subroutines (pflib.ps)                                                 
%%Creator: BPA-psplot                                                                     
%%CreationDate: june 17, 1993                                                             
%%Modified for A4 Paper: 22-April-2002  jgs                                               
%%Pages: (atend)                                                                          
%%EndComments                                                                             
                                                                                          
% MARKER 1.0 *******************                                                          
                                                                                          
%%Begin data read by psplot                                                               
%[BX    WSCC will change the first the first 7 characters to: %[BPABX                     
%>DEFINE_TYPE OLDBASE LET cAse=CASE                                                       
%>DEFINE_TYPE OLDBASE LET dAte=DATE                                                       
%>DEFINE_TYPE OLDBASE LET pFvr=PFVER                                                      
%>DEFINE_TYPE OLDBASE LET dEsc=DESC                                                       
%P /Helvetica-Bold findfont 10 scalefont setfont                                          
%P ($cAse/A10    $dAte/A10    $pFvr/A20             )  caseId                             
%P /Helvetica-Bold findfont 08 scalefont setfont                                          
%P ($dEsc/A20            ) descId                                                         
%! ****** difference stuff - ALT is magic prefix for character data *************         
%P vaOpdif 1 eq{                                                                          
%>DEFINE_TYPE OLDBASE LET ALTcase=CASE                                                    
%>DEFINE_TYPE OLDBASE LET ALTdate=DATE                                                    
%>DEFINE_TYPE OLDBASE LET ALTpf=PFVER                                                     
%>DEFINE_TYPE OLDBASE LET ALTdesc=DESC                                                    
%P /Helvetica-Bold findfont 10 scalefont setfont                                          
%P ($ALTcase/A10 $ALTdate/A10 $ALTpf/A20            )  caseIdbg                           
%P /Helvetica-Bold findfont 08 scalefont setfont                                          
%P ($ALTdesc/A20            ) descIdbg                                                    
%P } if                                                                                   
%! ****** emulated stuff *************                                                    
%>DEFINE_TYPE OLDBASE LET tIme=TIME                                                       
%P /Helvetica findfont 07 scalefont setfont                                               
%P (Powerflow run at $tIme/A20          ) baseId                                          
%Option SSpecific Header=0                                                                
%Option SSpecific Comments=20                                                             
%(end)                                                                                    
%[End BPA data block read by psplot --DO NOT REMOVE THIS RECORD                           
                                                                                          
%[WSCCBX  WSCC will change the first 4 characters of this record to: %[BX                 
%! ****** emulated stuff *************                                                    
%>DEFINE_TYPE OLDBASE LET tIme=TIME                                                       
%P /Helvetica findfont 07 scalefont setfont                                               
%P (Powerflow run at $tIme/A20          ) baseId                                          
%Option SSpecific Header=1                                                                
%Option SSpecific Comments=03                                                             
%(end)                                                                                    
                                                                                          
%[End WSCC data block read by psplot --DO NOT REMOVE THIS RECORD                          
                                                                                          
                                                                                          
/Helvetica findfont 7 scalefont setfont                                                   
/str 20 string def   %create string vrbl in named str                                     
% usertime             %get usertime in milliseconds                                      
% str cvs              %convert time to string                                            
% 45 35 moveto                                                                            
% str show             %display usertime in lowerleft                                     
                                                                                          
400 dict begin         % preseinly using one global dictionary-- ran out at default size o
                                                                                          
% MARKER 2.0 *******************                                                          
%----------------- The enclosed code may be customized at the users pleasure -----        
                                                                                          
%***** LINE PATTERN DATA****************                                                  
                                                                                          
/LinePatternArray 5 def                                                                   
/LinePattern LinePatternArray array def                                                   
/LinePatternCount LinePatternArray 1 sub def                                              
                                                                                          
 LinePattern 0 [200  231 [ [3      6] 0 ] 1.00 ] put                                      
 LinePattern 1 [500 2000 [ [1   1000] 0 ] 1.00 ] put                                      
 LinePattern 2 [100  200 [ [5      1] 0 ] 1.00 ] put                                      
 LinePattern 3 [231  500 [ [1      5] 0 ] 1.00 ] put                                      
 LinePattern 4 [0  99999 [ [1000   1] 0 ] 1.00 ] put                                      
                                                                                          
%***** Line Pattern for Outage Line ******************                                    
                                                                                          
/LinePatternOut [        [ [1      4] 0 ] 1.00 ] def                                      
/curve-offset 8 def                                                                       
                                                                                          
%***** Line Pattern for Interchange Line ******************                               
                                                                                          
/LinePatternInt [        [ [1  10000] 0 ] 1.00 ] def                                      
                                                                                          
%***** BUS OVER-VOLTAGE/UNDER-VOLTAGE DATA *************                                  
                                                                                          
/VoltLimArray 5 def                                                                       
/VoltLim VoltLimArray array def                                                           
/VoltLimCount VoltLimArray 1 sub def                                                      
 VoltLim 0 [230  500 0.95  1.052] put                                                     
 VoltLim 1 [500 2000 1.00  1.100] put                                                     
 VoltLim 2 [115  230 0.95  1.052] put                                                     
 VoltLim 3 [  0  115 0.95  1.052] put                                                     
 VoltLim 4 [  0 9999 1.00  1.000] put                                                     
                                                                                          
%----------------- The enclosed code may be customized at the users pleasure -----        
                                                                                          
                                                                                          
% MARKER 3.0 *******************                                                          
                                                                                          
/boldfont /Helvetica-Bold findfont 7 scalefont def                                        
/fgcolor [ 0 0 0 ] def                                                                    
/bgcolor [ 1 1 1 ] def                                                                    
/arcolor [ 1 1 1 ] def                 % default color of arrows                          
/trcolor [ 0 0 0 ] def                 % default color of transformers                    
/cpcolor [ 0 0 0 ] def                 % default color of series capicators               
/txtcolor [ 0 0 0 ] def                                                                   
/text-spacing 3 def                    % spacing between text lines                       
/text-text-spc 5 def                    % spacing between text within lines               
/line-text-spacing 2 def               % spacing between text and lines                   
/bus-radius 3 def                      % default bus radius                               
/bus-width 8 def                       % default width of square bus                      
/obj-line-width .75 def                % default line width for objects                   
/bub-wall-width 1.0 def                % width of bubble walls                            
/obj-trans-width 1.50 def              % default line width for transformers              
/obj-comp-width 1.00 def               % default line width for series capicators         
/arrow-width-ratio 3 def               % default is 3 times as wide as line               
/arrow-length-ratio 2 def              % default is 2 times as long as wide               
/arrow-to-branch-ratio 6 def           % default arrow length is 6X branch width          
/trans-width-ratio 2 def               % default is 2 times as wide as line               
/comp-width-ratio 2 def                % default is 2 times as wide as line               
/branch-dash [ [] 0 ] def              % solid line                                       
/branch-width .75 def                  % default branch width                             
/branch-border 1.0 def                 % width of branch outline * 2                      
/fntscalelg  1.2 def                   % scale factor for large font                      
/fntscale .8 def                       % scale factor for small font                      
/react-rad-ratio 1.5 def               % reactor radius ratio                             
/inch { 72 mul } def                                                                      
/cmtr { 28.35 mul } def                                                                   
/baseIdent ( ) def                                                                        
%                                                                                         
% initalize postscript variables                                                          
% initPost -                                                                              
/initPost                                                                                 
{                                                                                         
/xCom 0 def                            % initialize x-ordinate for comments               
/yCom 0 def                            % initialize y-ordinate for comments               
/x-scale 1.0 def                                                                          
/y-scale 1.0 def                                                                          
/x-offset-tad 0.5 cmtr def             % WSCC may want to offset by 0.8                   
/y-offset-tad 0.5 cmtr def             % WSCC may want to offset by 0.8                   
/x-cordFile 0.0 def                                                                       
/y-cordFile 0.0 def                                                                       
/x-cmnt 0.0 def                                                                           
/y-cmnt 0.0 def                                                                           
/x-case 0.0 def                                                                           
/y-case 0.0 def                                                                           
/x-desc 0.0 def                                                                           
/y-desc 0.0 def                                                                           
/x-casebg 0.0 def                                                                         
/y-casebg 0.0 def                                                                         
/x-descbg 0.0 def                                                                         
/y-descbg 0.0 def                                                                         
/x-base 0.0 def                                                                           
/y-base 0.0 def                                                                           
/y-boxlr 0.0 def                                                                          
/x-boxlr 0.0 def                                                                          
/y-box 0.0 def                                                                            
/x-box 0.0 def                                                                            
/x-size 20.99 cmtr def                                                                    
/y-size 29.70 cmtr def                                                                    
/x-brdr x-size def                                                                        
/y-brdr y-size def                                                                        
/P-L-orient (P) def                                                                       
/x-legnd 0.0 def                                                                          
/y-legnd 0.0 def                                                                          
/dgOptyp 1 def                                                                            
/vaOpdif 0 def                                                                            
} def                                                                                     
                                                                                          
% MARKER 4.0 *******************                                                          
                                                                                          
% Set Options defined via OPTION records for use with POSTSCRIPT code                     
% cmpFlg tapFlg pSnd qSnd pRcv qRcv setOpt1                                               
%                                                                                         
/setOpt1                                                                                  
{                                                                                         
   /qRcv exch def                % show receiving end Q                                   
   /pRcv exch def                % show receiving end P                                   
   /qSnd exch def                % show sending   end Q                                   
   /pSnd exch def                % show sending   end P                                   
   /tapFlg exch def              % Tap          Flag - 0:no-show 1:show tx taps           
   /cmpFlg exch def              % Compensation Flag - 0:no-show 1:show compensation      
} def                                                                                     
                                                                                          
                                                                                          
                                                                                          
% Set more options defined via OPTION records for use with POSTSCRIPT code                
% dgOptyp vaOpdif setOpt2                                                                 
%                                                                                         
/setOpt2                                                                                  
{                                                                                         
   /vaOpdif exch def                % 0 - normal; 1 - difference diagram                  
   /dgOptyp exch def                % Diagram type 1-6; 5 - Coordinates only              
} def                                                                                     
                                                                                          
                                                                                          
                                                                                          
% Set more options defined via OPTION records for use with POSTSCRIPT code                
% ssPfHdr ssPfCmt setOpt3                                                                 
%                                                                                         
/setOpt3                                                                                  
{                                                                                         
   /ssPfCmt exch def                % Max Number of Pwrflo comment records                
   /ssPfHdr exch def                % 0-No Pwrflo Header; 1/2-Begin with Hdr 1 or 2       
} def                                                                                     
                                                                                          
                                                                                          
% Draw a border and "opaque" it if necessary                                              
% x-upper-right y-upper-right (transparancy-flag) offset-flag border => -                 
% transparancy-flag  (T) - transparent                                                    
%                    (O) - opaque                                                         
% offset-flag         0  - no offset                                                      
%                     1  - offset "a tad" to compensate for Postscript problems           
%                          printing near the edge                                         
/border                                                                                   
{                                                                                         
  /ofstFlg exch  def                                                                      
  /trnsFlg exch  def                                                                      
  /y--brdr exch  def                                                                      
  /x--brdr exch  def                                                                      
  newpath                                                                                 
  ofstFlg 1 eq                                                                            
   {/x-strt x-offset-tad def                                                              
    /y-strt y-offset-tad 0.2 cmtr add def                                                 
    /x--brdr x--brdr x-offset-tad sub def                                                 
    /y--brdr y--brdr y-offset-tad sub def                                                 
                                                                                          
   }                                                                                      
   {/x-strt 0.0  def                                                                      
                                                                                          
    /y-strt 0.0  def                                                                      
                   }  ifelse                                                              
                                                                                          
    x-strt   y-strt   moveto                                                              
    x-strt   y--brdr lineto                                                               
    x--brdr y--brdr  lineto                                                               
    x--brdr y-strt    lineto                                                              
    closepath                                                                             
    trnsFlg (O) eq {1 setgray gsave fill  stroke  grestore} if                            
    0 setgray  stroke                                                                     
                                                                                          
                                                                                          
} def                                                                                     
                                                                                          
% Set the scale and save the value for later use                                          
% x-scale y-scale setScale                                                                
%                                                                                         
/setScale                                                                                 
{                                                                                         
   /y-scale exch def                                                                      
   /x-scale exch def                                                                      
   /y-brdr  y-brdr y-scale div def                                                        
   /x-brdr  x-brdr x-scale div def                                                        
%  /y-base  y-base y-scale div def                                                        
   /x-offset-tad x-offset-tad x-scale div def                                             
   /y-offset-tad y-offset-tad y-scale div def                                             
   x-scale y-scale scale                                                                  
} def                                                                                     
                                                                                          
% MARKER 5.0 *******************                                                          
                                                                                          
% Identify diagram with case name, case-creation-date, case-creation-pf-version           
% (text) caseId => -                                                                      
%                                                                                         
/caseId                                                                                   
{                                                                                         
%/Helvetica findfont 7 scalefont setfont                                                  
  x-case y-case CordCmnt  % print comment via CordCmnt                                    
} def                                                                                     
                                                                                          
% Identify diagram with case description                                                  
% (text) descId => -                                                                      
%                                                                                         
/descId                                                                                   
{                                                                                         
%/Helvetica findfont 7 scalefont setfont                                                  
  x-desc y-desc CordCmnt  % print comment via CordCmnt                                    
} def                                                                                     
                                                                                          
%*********************                                                                    
% Identify diagram with background case name, case-creation-date, case-creation-pf-version
% (text) caseIdbg => -                                                                    
%                                                                                         
/caseIdbg                                                                                 
{                                                                                         
%/Helvetica findfont 7 scalefont setfont                                                  
  x-casebg y-casebg CordCmnt  % print comment via CordCmnt                                
} def                                                                                     
                                                                                          
% Identify diagram with background case description                                       
% (text) descIdbg => -                                                                    
%                                                                                         
/descIdbg                                                                                 
{                                                                                         
%/Helvetica findfont 7 scalefont setfont                                                  
  x-descbg y-descbg CordCmnt  % print comment via CordCmnt                                
} def                                                                                     
%***************                                                                          
                                                                                          
                                                                                          
% Identify diagram with date of base case run                                             
% (text) baseId => -                                                                      
%                                                                                         
/baseId                                                                                   
{                                                                                         
%/Helvetica findfont 7 scalefont setfont                                                  
%  x-base y-base CordCmnt  % print comment via CordCmnt                                   
/baseIdent exch def                                                                       
} def                                                                                     
                                                                                          
                                                                                          
/legndId                                                                                  
{                                                                                         
  gsave                                                                                   
  x-legnd y-legnd translate                                                               
  0 -4.50 cmtr translate                                                                  
  newpath                                                                                 
  0 0  moveto 0 4.50 cmtr lineto 2.2 cmtr 4.50 cmtr lineto 2.2 cmtr 0 cmtr lineto         
  closepath stroke                                                                        
  /Helvetica-Bold findfont 10 scalefont setfont                                           
  0.4 cmtr 4.00 cmtr  moveto                                                              
  (LEGEND) show                                                                           
  /Helvetica-Bold findfont 08 scalefont setfont                                           
  [ 0.10 cmtr  3.25 cmtr 2.10 cmtr  3.25 cmtr ]                                           
  () () ()  1      0 (  0 - <100 kv) ()    ()    0   099 acLine                           
  [ 0.10 cmtr  2.50 cmtr 2.10 cmtr  2.50 cmtr ]                                           
  () () ()  1      0 (100 - <200 kv) ()    ()    0   199 acLine                           
  [ 0.10 cmtr  1.75 cmtr 2.10 cmtr  1.75 cmtr ]                                           
  () () ()  1      0 (200 - <231 kv) ()    ()    0   230 acLine                           
  [ 0.10 cmtr  1.00 cmtr 2.10 cmtr  1.00 cmtr ]                                           
  () () ()  1      0 (231 - <500 kv) ()    ()    0   499 acLine                           
  [ 0.10 cmtr  0.25 cmtr 2.10 cmtr  0.25 cmtr ]                                           
  () () ()  1      0 (500 kv and up) ()    ()    0   500 acLine                           
  grestore                                                                                
} def                                                                                     
                                                                                          
                                                                                          
% MARKER 6.0 *******************                                                          
                                                                                          
/plotId                                                                                   
{                                                                                         
baseIdent stringCat                                                                       
/Helvetica findfont 7 scalefont setfont                                                   
  0.45 x-scale div cmtr  y-base  CordCmnt  % print comment via CordCmnt                   
% y-box .1 gt {   This check stuff must have been good, but I can't remember why          
    P-L-orient (P) eq                                                                     
    {x-size x-scale div  y-size y-scale div (T) 1 border}                                 
    {y-size x-scale div  x-size y-scale div  (T) 1 border} ifelse                         
% } if            This check stuff must have been good, but I can't remember why          
  newpath                                                                                 
                                                                                          
  x-boxlr .1 gt                                                                           
                                                                                          
  { x-box   y-boxlr moveto                                                                
    x-box   y-box   lineto                                                                
    x-boxlr y-box   lineto                                                                
    x-boxlr y-boxlr lineto                                                                
    closepath                                                                             
  }                                                                                       
                                                                                          
  { x-box y-offset-tad moveto                                                             
    x-box y-box lineto                                                                    
    x--brdr y-box lineto                                                                  
  } ifelse                                                                                
  0 setgray  stroke                                                                       
  y-legnd .1 gt                                                                           
  {legndId} if                                                                            
                                                                                          
} def                                                                                     
                                                                                          
%                                                                                         
% Put first header record from powerflow in top of diagram                                
% (header record) pfHdr1 -                                                                
% pfHdr1 sets starting coordinates and draws box                                          
% other header records are displayed via CordCmnt calls from psplot                       
%                                                                                         
/pfHdr1                                                                                   
{                                                                                         
  /x-hdr x-offset-tad 1.2 mul def        % define x-ordinate of header                    
   /y-hdr y--brdr 0.3 cmtr  sub def                                                       
%  /x-hdr-ln x--brdr def                                                                  
 /Helvetica-Bold findfont 10 scalefont setfont                                            
  x-hdr y-hdr CordCmnt                                                                    
  newpath                                                                                 
   /y-hdr-ln y-hdr 3 ssPfHdr sub 0.5 cmtr mul sub 0.1 cmtr sub def                        
   x-offset-tad y-hdr-ln  moveto                                                          
%  x-hdr-ln y-hdr-ln  lineto                                                              
   x--brdr y-hdr-ln  lineto                                                               
  0 setgray  stroke                                                                       
} def                                                                                     
                                                                                          
                                                                                          
% Identify diagram with Coordinate file name                                              
% (text) cordTxt => -                                                                     
%                                                                                         
/cordTxt                                                                                  
{                                                                                         
/Helvetica-Bold findfont 7 scalefont setfont                                              
  y-cordFile .1 gt {                                                                      
     x-cordFile y-cordFile CordCmnt  % print comment via CordCmnt                         
  } if                                                                                    
} def                                                                                     
                                                                                          
% ocate information box and related coordinates                                           
% x-box y-box  boxLoc => -                                                                
%                                                                                         
                                                                                          
/boxLoc                                                                                   
{                                                                                         
  /y-boxlr exch def                                                                       
  /x-boxlr exch def                                                                       
  /y-box exch def                                                                         
  /x-box exch def                                                                         
  /y-case y-box 0.35 cmtr sub def                                                         
  /x-case x-box 0.2  cmtr add def                                                         
  /y-desc y-box 0.7  cmtr sub def                                                         
  /x-desc x-box 0.2  cmtr add def                                                         
  /y-casebg y-case 0.7 cmtr sub def                                                       
  /x-casebg x-case  def                                                                   
  /y-descbg y-desc 0.7 cmtr sub def                                                       
  /x-descbg x-desc def                                                                    
  /y-cmnt y-box 0.8  0.7 vaOpdif mul add cmtr sub def                                     
  /x-cmnt x-box 0.2  cmtr add def                                                         
  /y-base       0.50 cmtr     def                                                         
  /y-base  y-base y-scale div def                                                         
  /x-base x-box 0.2  cmtr add def                                                         
  /y-cordFile y-base def                                                                  
    P-L-orient (P) eq                                                                     
    {/x-cordFile 14.5 cmtr x-scale div def }                                              
    {/x-cordFile 20.5 cmtr x-scale div def } ifelse                                       
} def                                                                                     
                                                                                          
                                                                                          
% MARKER 7.0 *******************                                                          
                                                                                          
/cmntLoc                                                                                  
{                                                                                         
 /y-cmnt exch def                                                                         
 /x-cmnt exch def                                                                         
} def                                                                                     
                                                                                          
%                                                                                         
% Locate diagram with Coordinate file name                                                
% x-cord y-cord  cordLoc => -                                                             
%                                                                                         
/cordLoc                                                                                  
{                                                                                         
  /y-cordFile exch def                                                                    
  /x-cordFile exch def                                                                    
} def                                                                                     
                                                                                          
                                                                                          
                                                                                          
%                                                                                         
% Locate case name                                                                        
% x-case y-case  caseLoc => -                                                             
%                                                                                         
/caseLoc                                                                                  
{                                                                                         
%%%% disable this function                                                                
 pop pop                                                                                  
% /y-case exch def                                                                        
% /x-case exch def                                                                        
% /y-desc y-case 0.35 sub cmtr def                                                        
% /x-desc x-case def                                                                      
                                                                                          
% /y-casebg y-case 0.7 cmtr sub def                                                       
% /x-casebg x-case def                                                                    
% /y-descbg y-desc 0.7 sub cmtr def                                                       
% /x-descbg x-desc def                                                                    
} def                                                                                     
                                                                                          
                                                                                          
                                                                                          
%                                                                                         
% Locate diagram size                                                                     
% x-size y-size  sizeLoc => -                                                             
%                                                                                         
/sizeLoc                                                                                  
{                                                                                         
  /y-size exch def                                                                        
  /x-size exch def                                                                        
} def                                                                                     
                                                                                          
                                                                                          
%                                                                                         
% Locate legend                                                                           
% x-legnd y-legnd legndLoc => -                                                           
%                                                                                         
/legndLoc                                                                                 
{                                                                                         
  /y-legnd exch def                                                                       
  /x-legnd exch def                                                                       
} def                                                                                     
                                                                                          
                                                                                          
                                                                                          
%****************** fixing stuff here *******************                                 
                                                                                          
% MARKER 8.0 *******************                                                          
                                                                                          
                                                                                          
%  print an array of text starting at position x y and proceeds upward                    
%* ARRAY x y prt-text-up =>                                                               
%                                                                                         
/prt-text-up                                                                              
{                                                                                         
  txtcolor aload pop setrgbcolor       % draw text in text color                          
  /nxty exch  def                                                                         
  /nxtx exch  def                                                                         
  {                                                                                       
    newpath                                                                               
    nxtx nxty moveto                                                                      
    dup                                                                                   
    false charpath flattenpath pathbbox                                                   
    newpath                                                                               
    nxtx nxty moveto                   % now that we have the size of text                
                                       % we can place it for real.                        
    text-spacing add                                                                      
    /nxty exch def                     % retrieve upper right y                           
    pop                                % upper right x                                    
    pop                                % lower left y                                     
    /nxtx exch def                     % lower left x                                     
    show                                                                                  
  } forall                                                                                
} def                                                                                     
                                                                                          
%  print an array of text starting at position x y and proceeds downward                  
%* ARRAY x y prt-text-down =>                                                             
%                                                                                         
/prt-text-down                                                                            
{                                                                                         
  txtcolor aload pop setrgbcolor        % draw text in foreground color                   
  /nxty exch  def                                                                         
  /nxtx exch  def                                                                         
  {                                                                                       
    newpath                                                                               
    0 0 moveto                                                                            
    dup                                                                                   
    false charpath flattenpath pathbbox                                                   
    newpath                                                                               
    text-spacing add                                                                      
    nxty exch sub                      % upper right y                                    
    /nxty exch def                                                                        
    pop                                % upper right x                                    
    pop                                % lower left y                                     
    pop                                % lower left x                                     
    nxtx nxty moveto                   % now that we have the size of text                
                                       % we can place it for real.                        
    show                                                                                  
  } forall                                                                                
} def                                                                                     
                                                                                          
                                                                                          
% MARKER 9.0 *******************                                                          
                                                                                          
%  print an array of text starting at position x y                                        
%  print the first line above point x y, then proceeds downward                           
%* ARRAY x y prt-bus-text-down =>                                                         
%                                                                                         
/prt-bus-text-down                                                                        
{                                                                                         
  txtcolor aload pop setrgbcolor        % draw text in foreground color                   
  /nxty exch  def                                                                         
  /nxtx exch  def                                                                         
  {                                                                                       
    newpath                                                                               
    nxtx nxty moveto                                                                      
                                                                                          
% calculate cordinates for NEXT nxtx and nxty                                             
    dup                                                                                   
    false charpath flattenpath pathbbox                                                   
    newpath                                                                               
    nxtx nxty moveto                                                                      
    text-spacing add                   % add spacing to UR-x                              
    exch pop sub                       % get negative of delta-y                          
    nxty add                           % calculate next nxty                              
    /nxty exch def pop                                                                    
                                                                                          
% print at OLD location                                                                   
    show                                                                                  
  } forall                                                                                
} def                                                                                     
                                                                                          
%  print an array of text starting at position x y and proceeds right                     
%* ARRAY x y prt-bus-text-right =>                                                        
%                                                                                         
/prt-bus-text-right                                                                       
{                                                                                         
  txtcolor aload pop setrgbcolor       % draw text in text color                          
  /nxty exch  def                                                                         
  /nxtx exch  def                                                                         
  /pass-no 0 def                                                                          
                                                                                          
                                                                                          
  {                                                                                       
  /pass-no pass-no 1 add def                                                              
    newpath                                                                               
    nxtx nxty moveto                                                                      
    dup                                                                                   
    false charpath flattenpath pathbbox                                                   
    newpath                                                                               
                                                                                          
    pass-no 1 le                                                                          
                                                                                          
      {nxtx nxty moveto                   % reset for current text                        
       pop text-text-spc add                                                              
       /nxtx exch def                     % upper-right-x                                 
       pop pop}                           % lower-left-y lower-left-x                     
                                                                                          
      {nxtx nxty moveto                   % reset for current text                        
       text-spacing add                   % add spacing to UR-x                           
       exch pop sub                       % get negative of delta-y                       
       nxty add                           % calculate next nxty                           
       /nxty exch def pop                                                                 
      } ifelse                                                                            
                                                                                          
                                                                                          
    show                                                                                  
  } forall                                                                                
} def                                                                                     
                                                                                          
% MARKER 10.0 *******************                                                         
                                                                                          
/prt-bus-text-left                                                                        
{                                                                                         
  txtcolor aload pop setrgbcolor       % draw text in text color                          
  /nxty exch  def                                                                         
  /nxtx exch  def                                                                         
  /pass-no 0 def                                                                          
  {                                                                                       
  /pass-no pass-no 1 add def                                                              
    newpath                                                                               
    nxtx nxty moveto                                                                      
    dup                                                                                   
    dup /savebox exch def                 % save string for transition to prt-down        
    false charpath flattenpath pathbbox                                                   
    newpath                                                                               
    nxtx nxty moveto                                                                      
                                                                                          
    pass-no 1 eq                                                                          
      {pop pop pop pop show} if                                                           
                                                                                          
    pass-no 2 eq                                                                          
      {pop                                % upper right y                                 
       exch pop sub nxtx add              % subtract right x from left x                  
       /nxtx exch def                                                                     
       /nxtx nxtx text-text-spc sub def   % account for text-to-text spacing              
       nxtx nxty moveto                   % resest location for current text              
       show                                                                               
                                                                                          
       newpath                            % begin setup for printing down                 
       nxtx nxty moveto                                                                   
       savebox                                                                            
       false charpath flattenpath pathbbox                                                
       text-spacing add                   % add spacing to UR-x                           
       exch pop sub                       % get negative of delta-y                       
       nxty add                           % calculate next nxty                           
       /nxty exch def pop                                                                 
      } if                                                                                
                                                                                          
    pass-no 2 gt                                                                          
      {text-spacing add                   % add spacing to UR-x                           
       exch pop sub                       % get negative of delta-y                       
       nxty add                           % calculate next nxty                           
       /nxty exch def pop                                                                 
       show                              % print string on top of stack                   
      } if                                                                                
                                                                                          
  } forall                                                                                
} def                                                                                     
                                                                                          
                                                                                          
                                                                                          
                                                                                          
%  print a string of text with x y as lower left of string                                
%* string x y prt-text-center-up =>                                                       
%                                                                                         
/prt-text-center-up                                                                       
{                                                                                         
  moveto                                                                                  
  dup                                                                                     
  stringwidth                                                                             
  pop                                                                                     
  -.5 mul                                                                                 
  line-text-spacing rmoveto                                                               
  show                                                                                    
} def                                                                                     
                                                                                          
%  print a string of text with x y as upper left of string                                
%* string x y prt-text-center-up =>                                                       
%                                                                                         
/prt-text-center-down                  % !!!!!!!!!! offset of cury incorrect              
{                                                                                         
  newpath                                                                                 
  /cury exch def                                                                          
  /curx exch def                                                                          
  dup                                                                                     
  0 0 moveto                                                                              
  /fontheight currentfont /FontMatrix get 0 get 1000 mul def                              
%  false charpath flattenpath pathbbox                                                    
%  newpath                                                                                
%  /fontheight exch def                                                                   
  /cury cury fontheight sub def                                                           
  stringwidth pop                                                                         
    -.5 mul                                                                               
  curx add                                                                                
  /curx exch def                                                                          
  curx cury moveto                                                                        
%  pop pop                                                                                
  show                                                                                    
} def                                                                                     
                                                                                          
% MARKER 11.0 *******************                                                         
                                                                                          
%  position arrow at x y at an angle with text right side up                              
%  ARROW                                                                                  
%* angle x y flow-flag ovld-flag string-top string-topb string-bot arrow =>               
%                                                                                         
/arrow                                                                                    
{                                                                                         
  /strbot exch def                                                                        
  /strtopb exch def                                                                       
  /strtopa exch def                                                                       
                                                                                          
  /brOvldFlag exch def                                                                    
  /flowFlag   exch def                                                                    
                                                                                          
  /totwidth branch-width branch-border add def                                            
  totwidth 1.5 lt { /totwidth 1.5 def } if                                                
  newpath                                                                                 
  gsave                                                                                   
  translate                   % take coordinates off stack                                
  0 0 moveto                                                                              
  /angle exch def             % take angle off stack                                      
                                                                                          
  flowFlag 0 lt { 180 rotate} if                                                          
                                                                                          
  angle rotate                                                                            
  totwidth                                                                                
  arrow-width-ratio mul                % arrow is scaled to line thickness                
  /arrowwidth exch def                                                                    
  [] 0 setdash                                                                            
  arcolor aload pop setrgbcolor                                                           
  obj-line-width setlinewidth                                                             
  arrowwidth arrow-length-ratio mul    % total arrow length                               
  -.5 mul                              % get half arrow length                            
  dup neg                              % set & save (in stack) X location for tip         
                                       % and tail of arrow                                
  0 moveto                                                                                
  arrowwidth 2 div                                                                        
  lineto                                                                                  
  currentpoint                                                                            
  neg                                                                                     
  lineto                                                                                  
  closepath                                                                               
  gsave                                                                                   
  brOvldFlag () eq {1 1 1} {0 0 0} ifelse  % set shading for arrow overload               
  setrgbcolor                                                                             
  fill                                                                                    
  grestore                                                                                
  fgcolor aload pop setrgbcolor                                                           
  stroke                                                                                  
%print text                                                                               
  strtopa strtopb                          % load sending and receiving end power         
                                                                                          
  flowFlag 0 lt { 180 rotate exch } if                                                    
  fgcolor aload pop setrgbcolor                                                           
  angle  0 lt { angle 360 add /angle exch def } if                                        
  angle 90 gt angle 270 le and                                                            
  { 180 rotate exch } if                   % make sure text always faces up               
                                                                                          
%%% changed stuff ************************************                                    
% strbot 0 totwidth .5 mul neg prt-text-center-down                                       
% strtop 0 totwidth .5 mul prt-text-center-up                                             
  stringCat 0 totwidth 1.5 mul prt-text-center-up                                         
  strbot 0 totwidth .7 mul neg prt-text-center-down                                       
%%% changed stuff ************************************                                    
  grestore                                                                                
} def                                                                                     
                                                                                          
% MARKER 12.0 *******************                                                         
                                                                                          
%  position arrow at x y at an angle with text right side up                              
% INT ARROW                                                                               
%* angle x y  value-top ovld-flag string-bot intArrow =>                                  
%                                                                                         
/intArrow                                                                                 
{                                                                                         
  /strbot exch def                                                                        
  /valtop exch def                                                                        
                                                                                          
  /brOvldFlag exch def                                                                    
                                                                                          
  /totwidth branch-width branch-border add def                                            
  totwidth 1.5 lt { /totwidth 1.5 def } if                                                
  newpath                                                                                 
  gsave                                                                                   
  translate                   % take coordinates off stack                                
  0 0 moveto                                                                              
  /angle exch def             % take angle off stack                                      
  angle rotate                                                                            
                                                                                          
  valtop 0 ne                                                                             
  {                           % draw an arrow                                             
  valtop   0 lt { 180 rotate} if                                                          
                                                                                          
  totwidth                                                                                
  arrow-width-ratio mul                % arrow is scaled to line thickness                
  /arrowwidth exch def                                                                    
  [] 0 setdash                                                                            
  arcolor aload pop setrgbcolor                                                           
  obj-line-width setlinewidth                                                             
  arrowwidth arrow-length-ratio mul    % total arrow length                               
  -.5 mul                              % get half arrow length                            
  dup neg                              % set & save (in stack) X location for tip         
                                       % and tail of arrow                                
  0 moveto                                                                                
  arrowwidth 2 div                                                                        
  lineto                                                                                  
  currentpoint                                                                            
  neg                                                                                     
  lineto                                                                                  
  closepath                                                                               
  gsave                                                                                   
  fill                                                                                    
  grestore                                                                                
  fgcolor aload pop setrgbcolor                                                           
  stroke                                                                                  
  } {newpath} ifelse                                                                      
%print text                                                                               
  valtop   0 lt { 180 rotate} if                                                          
  fgcolor aload pop setrgbcolor                                                           
  angle  0 lt { angle 360 add /angle exch def } if                                        
  angle 90 gt angle 270 le and                                                            
  { 180 rotate } if                    % make sure text always faces up                   
                                                                                          
%%% changed stuff ************************************                                    
  strbot 0 totwidth .5 mul neg prt-text-center-down                                       
  strbot 0 totwidth .7 mul neg prt-text-center-down                                       
  /lstr valtop  abs dup 0 eq {1 add}if log 1 add cvi def % get length of string           
  /lbl4val lstr string def              % vbl for converting values to string lbl         
  valtop abs lbl4val cvs                                                                  
  lbl4val 0 totwidth 1.5 mul prt-text-center-up                                           
%%% changed stuff ************************************                                    
  grestore                                                                                
} def                                                                                     
                                                                                          
                                                                                          
% MARKER 13.0 *******************                                                         
                                                                                          
                                                                                          
%  position labels at x y at an angle with text right side up                             
%* angle x y string-top string-bot label =>                                               
%                                                                                         
/label                                                                                    
{                                                                                         
  /strbot exch def                                                                        
  /strtop exch def                                                                        
  /totwidth branch-width branch-border add def                                            
  totwidth 1.5 lt { /totwidth 1.5 def } if                                                
  newpath                                                                                 
  gsave                                                                                   
  translate                                                                               
  0 0 moveto                                                                              
  /angle exch def                                                                         
  angle rotate                                                                            
%print text                                                                               
  fgcolor aload pop setrgbcolor                                                           
  angle  0 lt { angle 360 add /angle exch def } if                                        
  angle 90 gt angle 270 le and                                                            
  { 180 rotate } if                    % make sure text always faces up                   
  strbot 0 totwidth .5 mul neg prt-text-center-down                                       
  strtop 0 totwidth .5 mul prt-text-center-up                                             
  grestore                                                                                
} def                                                                                     
                                                                                          
% MARKER 14.0 *******************                                                         
                                                                                          
%  place transformer at location x y with text right side up                              
%  taps, when present, are printed below and to the left and right of the transformer     
%  flowFlag angle x y           trans =>                                                  
%                                                                                         
/trans                                                                                    
{                                                                                         
% /strtap2 exch def      this value is now defined in acTran                              
% /strtap1 exch def      this value is now defined in acTran                              
  newpath                                                                                 
  /totwidth branch-width branch-border add def                                            
  totwidth 1.5 lt { /totwidth 1.5 def } if                                                
  totwidth trans-width-ratio mul        % transformer is scaled to line thickness         
  /transwidth exch def                                                                    
  [] 0 setdash                                                                            
  trcolor aload pop setrgbcolor                                                           
  obj-trans-width setlinewidth                                                            
  gsave                                 % Save initial conditions                         
  translate                                                                               
  0 0 moveto                                                                              
                                                                                          
  /angle exch def                                                                         
  /angflag exch def                                                                       
  angle  0 lt { angle 360 add /angle exch def } if  % assure that angle is positive       
  angflag 0 lt {/angle angle 180 add def} if        % check for reversed arrow            
  angle 360 gt { angle 360 sub /angle exch def } if % assure that angle is .lt. 360       
  angle rotate                                                                            
  gsave                                 % Save midpoint of rotated arrow                  
                                                                                          
  branch-width branch-border add arrow-width-ratio mul                                    
  arrow-length-ratio mul 2 div          % x location of point of arrow                    
  0 translate                                                                             
  0 transwidth moveto                                                                     
  transwidth     dup -.25 mul rlineto                                                     
  0 0 lineto                                                                              
  0 transwidth neg moveto                                                                 
  transwidth     transwidth .25 mul rlineto                                               
  0 0 lineto                                                                              
  stroke                                                                                  
% Drawing tx is complete                                                                  
                                                                                          
  grestore                             % Midpoint of rotated arrow                        
                                                                                          
  tapFlg 1 eq {                        % print taps as per users options                  
  transwidth 2 div 0 translate                                                            
  currentfont [ fntscale 0 0 fntscale 0 0 ] makefont setfont                              
  angle 90 gt angle 270 le and { 180 rotate } if  % make sure text always faces up        
                                                                                          
  0 0 moveto                                                                              
  gsave                                % symetric point for printing taps                 
                                                                                          
  angle 90 gt angle 270 le and                                                            
  { strtap1 strtap2                                                                       
    /strtap1 exch def                                                                     
    /strtap2 exch def                                                                     
  } if                                                                                    
                                                                                          
  angflag 0 lt                                                                            
  { strtap1 strtap2                                                                       
    /strtap1 exch def                                                                     
    /strtap2 exch def                                                                     
  } if                                                                                    
                                                                                          
  /x-offset                            % distance from symetric point to end of symbol    
  branch-width arrow-to-branch-ratio mul 2 div                                            
  transwidth 2 div add def                                                                
                                                                                          
  strtap1 stringwidth pop .8 mul x-offset add neg   % set X coordinate for text           
  branch-width  neg                                 % set Y coordinate for text           
                                                                                          
  translate                            % origin is now midpt of text                      
  0 0 moveto                                                                              
  strtap1 0 0 prt-text-center-down                                                        
                                                                                          
  grestore                             % symetric point for printing taps                 
  strtap2 stringwidth pop .8 mul x-offset add       % set X coordinate for text           
  branch-width  neg                                 % set Y coordinate for text           
                                                                                          
  translate                                                                               
  0 0 moveto                                                                              
  strtap2 0 0 prt-text-center-down                                                        
  }if                                                                                     
  grestore                                                                                
} def                                                                                     
                                                                                          
                                                                                          
                                                                                          
%  place series compensation at location x y with text right side up                      
%  compensaton is printed below and to the left of the compensation symbol                
%  compensation value is defined as 'pctComp' in acLine                                   
%  %-comp flowFlag angle x y           srComp =>                                          
%                                                                                         
/srComp                                                                                   
{                                                                                         
  /totwidth branch-width branch-border add def                                            
  totwidth 1.0 lt { /totwidth 1.0 def } if                                                
  totwidth comp-width-ratio mul        % capacitor is scaled to line thickness            
  /compwidth exch def                                                                     
  [] 0 setdash                                                                            
  cpcolor aload pop setrgbcolor                                                           
  obj-comp-width setlinewidth                                                             
  gsave                                 % Save initial conditions                         
  translate                                                                               
  0 0 moveto                                                                              
                                                                                          
  /angle exch def                                                                         
  /angflag exch def                                                                       
  /pctComp exch def                                                                       
  angle  0 lt { angle 360 add /angle exch def } if  % assure that angle is positive       
  angflag 0 lt {/angle angle 180 add def} if        % check for reversed arrow            
  angle 360 gt { angle 360 sub /angle exch def } if % assure that angle is .lt. 360       
  angle rotate                                                                            
  gsave                                 % Save midpoint of rotated arrow                  
                                                                                          
  branch-width branch-border add arrow-width-ratio mul                                    
  arrow-length-ratio mul 2 div          % x location of point of arrow                    
  0 translate                                                                             
  newpath                                                                                 
  0 compwidth moveto                                                                      
  0 compwidth neg  lineto                                                                 
  compwidth .55 mul compwidth neg lineto                                                  
  compwidth .55 mul compwidth lineto                                                      
  1 1 1 setrgbcolor    % set backgroung color                                             
  fill                                                                                    
% 0 compwidth moveto                                                                      
% 0 compwidth neg  lineto                                                                 
  fgcolor aload pop setrgbcolor    % set foreground color                                 
  newpath                                                                                 
  -0.25 cmtr 0 .25 cmtr -37 37 arc stroke                                                 
  newpath                                                                                 
  compwidth .55 mul compwidth neg moveto                                                  
  compwidth .55 mul compwidth lineto                                                      
  0 compwidth moveto                                                                      
                                                                                          
  stroke                                                                                  
% Drawing series capacitor is complete                                                    
                                                                                          
  grestore                             % Midpoint of rotated arrow                        
  compwidth 2 div 0 translate                                                             
  currentfont [ fntscale 0 0 fntscale 0 0 ] makefont setfont                              
  angle 90 gt angle 270 le and { 180 rotate } if  % make sure text always faces up        
                                                                                          
  0 0 moveto                                                                              
  gsave                                % symetric point for printing compensation         
                                                                                          
                                                                                          
  /x-offset                            % distance from symetric point to end of symbol    
  branch-width arrow-to-branch-ratio mul 2 div                                            
  compwidth 2 div add def                                                                 
                                                                                          
                                                                                          
                                                                                          
  grestore                             % symetric point for printing taps                 
  pctComp stringwidth pop .8 mul x-offset add       % set X coordinate for text           
  angle 90 gt angle 270 le and { neg } if           % switch location of % comp value     
  branch-width  neg                                 % set Y coordinate for text           
                                                                                          
  translate                                                                               
  0 0 moveto                                                                              
  pctComp 0 0 prt-text-center-down                                                        
  grestore                                                                                
} def                                                                                     
                                                                                          
%%%%%%%%%%%%%%% begin adding overlaod value %%%%%%%%%%%%%%                                
%  place overload value below arrow with text right side up                               
%  value must be below  [no. parallels] and compensation and tx taps also                 
%  ovld-value location-flag angle x y           ovLd =>                                   
%                                                                                         
%  use arrowwidth as defined by 'arrow'                                                   
%                                                                                         
%  location-flag = 0  print overload below arrow                                          
%                  1  print overload below taps or compensation                           
%                  2  print overload below [number of parallels]                          
/ovLd                                                                                     
{                                                                                         
  gsave                                 % Save initial conditions                         
  translate                             % go to middle of arrow                           
  0 0 moveto                                                                              
                                                                                          
  /angle exch def                                                                         
  /locFlag exch def                                                                       
  /ovLdVal exch def                                                                       
  angle  0 lt { angle 360 add /angle exch def } if  % assure that angle is positive       
  angle rotate                                                                            
                                                                                          
  angle 90 gt angle 270 le and { 180 rotate } if  % make sure text always faces up        
  0 arrowwidth 2 div locFlag 0.1 cmtr mul add neg translate                               
                                                                                          
  0 0 moveto                                                                              
                                                                                          
  ovLdVal 0 0 prt-text-center-down                                                        
  grestore                                                                                
} def                                                                                     
                                                                                          
%%%%%%%%%%%%%%% end adding overlaod value %%%%%%%%%%%%%%                                  
                                                                                          
% MARKER 15.0 *******************                                                         
                                                                                          
%  place shunt cap at location x y with text right side up                                
%* angle x y string-top string-bot capacitor =>                                           
%                                                                                         
/capacitor                                                                                
{                                                                                         
  /strbot exch def                                                                        
  /strtop exch def                                                                        
  newpath                                                                                 
  /totwidth branch-width branch-border add def                                            
  totwidth 1.5 lt { /totwidth 1.5 def } if                                                
  totwidth trans-width-ratio mul        % shunt cap scaled same as transformer            
  2 mul                                                                                   
  /capwidth exch def                                                                      
  [] 0 setdash                                                                            
  obj-line-width setlinewidth                                                             
  gsave                                                                                   
  translate                                                                               
  0 0 moveto                                                                              
  /angle exch def                                                                         
  angle rotate                                                                            
%%% modify stuff ********************                                                     
 0.5 inch 0.0 inch lineto                                                                 
 stroke                                                                                   
 newpath                                                                                  
 0.25 inch 0.00 inch translate                                                            
 0.00 inch 0.00 inch moveto                                                               
%%% modify stuff ********************                                                     
  1 1 1 setrgbcolor                                                                       
  0 0 capwidth .25 mul 90 270 arcn                                                        
  fill                                                                                    
  trcolor aload pop setrgbcolor                                                           
  0 capwidth .5 mul moveto                                                                
  0 capwidth neg rlineto                                                                  
  stroke                                                                                  
  capwidth 0 capwidth .75 mul 135 225 arc                                                 
% currentfont [ fntscale 0 0 fntscale 0 0 ] makefont setfont                              
  currentpoint                                                                            
  pop                                                                                     
  0 translate                          % at x,0                                           
                                                                                          
  strtop stringwidth pop .5 mul                                                           
  line-text-spacing add                                                                   
  0 translate                          % origin is now midpt of text                      
  0 0 moveto                                                                              
  angle 90 gt angle 270 le and                                                            
  { 180 rotate } if                    % make sure text always faces up                   
  stroke                                                                                  
%%% changed stuff ************************************                                    
% gsave                                                                                   
% boldfont [ fntscale 0 0 fntscale 0 0 ] makefont setfont                                 
%%% changed stuff ************************************                                    
  strbot 0 0 prt-text-center-down                                                         
%%% changed stuff ************************************                                    
% grestore                                                                                
%%% changed stuff ************************************                                    
  strtop 0 0 prt-text-center-up                                                           
  grestore                                                                                
} def                                                                                     
                                                                                          
                                                                                          
% MARKER 16.0 *******************                                                         
                                                                                          
%  place reactor at location x y with text right side up                                  
%* angle x y string-top string-bot reactor =>                                             
%                                                                                         
/reactor                                                                                  
{                                                                                         
  /strbot exch def                                                                        
  /strtop exch def                                                                        
  newpath                                                                                 
  /react-rad branch-width branch-border add def                                           
  react-rad 1.5 lt { /react-rad 1.5 def } if                                              
  /react-rad react-rad react-rad-ratio mul def                                            
  react-rad 1.25 mul                                                                      
  /react-spacing exch def                                                                 
  [] 0 setdash                                                                            
  obj-line-width setlinewidth                                                             
  gsave                                                                                   
  translate                                                                               
  0 0 moveto                                                                              
  /angle exch def                                                                         
  angle rotate                                                                            
%%% modify stuff ********************                                                     
 0.5 inch 0.0 inch lineto                                                                 
 stroke                                                                                   
 newpath                                                                                  
 0.25 inch 0.00 inch translate                                                            
 0.00 inch 0.00 inch moveto                                                               
%%% modify stuff ********************                                                     
  1 1 1 setrgbcolor                                                                       
  react-spacing 1.5 mul react-rad add dup                                                 
    neg react-rad moveto                                                                  
  dup react-rad lineto                                                                    
  dup react-rad neg lineto                                                                
  neg react-rad neg lineto                                                                
  fill                                 % erase line under reactor                         
  trcolor aload pop setrgbcolor                                                           
  react-spacing 1.5 mul neg            % xcenter                                          
  0                                    % ycenter                                          
  translate                                                                               
  0 0 react-rad 180 315 arcn                                                              
  react-spacing 0 translate                                                               
  currentpoint                                                                            
  exch                                                                                    
  atan                                                                                    
  /tmpangle exch def                                                                      
  0 0 react-rad tmpangle 315 arcn                                                         
  react-spacing 0 translate                                                               
  currentpoint                                                                            
  exch                                                                                    
  atan                                                                                    
  /tmpangle exch def                                                                      
  0 0 react-rad tmpangle 315 arcn                                                         
  react-spacing 0 translate                                                               
  currentpoint                                                                            
  exch                                                                                    
  atan                                                                                    
  /tmpangle exch def                                                                      
  0 0 react-rad tmpangle 0 arcn                                                           
  currentpoint                         % save my current point                            
                                       % since stroke destroys it                         
  stroke                                                                                  
% currentfont [ fntscale 0 0 fntscale 0 0 ] makefont setfont                              
  moveto                                                                                  
  strtop stringwidth pop .5 mul                                                           
  line-text-spacing add                                                                   
  0 translate                          % origin is now midpt of text                      
  0 0 moveto                                                                              
  angle 90 gt angle 270 le and                                                            
  { 180 rotate } if                    % make sure text always faces up                   
  stroke                                                                                  
%%% changed stuff ************************************                                    
% gsave                                                                                   
% boldfont [ fntscale 0 0 fntscale 0 0 ] makefont setfont                                 
%%% changed stuff ************************************                                    
  strbot 0 0 prt-text-center-down                                                         
%%% changed stuff ************************************                                    
% grestore                                                                                
%%% changed stuff ************************************                                    
  strtop 0 0 prt-text-center-up                                                           
  grestore                                                                                
} def                                                                                     
                                                                                          
% MARKER 17.0 *******************                                                         
                                                                                          
%  draw a line from p1 to p2                                                              
%* p1x p1y p2x p2y doLine => angle midx midy                                              
%                                                                                         
/doLine                                                                                   
{                                                                                         
  /end2y exch def                                                                         
  /end2x exch def                                                                         
  /end1y exch def                                                                         
  /end1x exch def                                                                         
  /totwidth branch-width branch-border add def                                            
  gsave                                                                                   
  fgcolor aload pop setrgbcolor        % draw solid line  in foreground color             
  [] 0 setdash                                                                            
  totwidth setlinewidth                                                                   
  end1x end1y moveto end2x end2y lineto                                                   
  stroke                                                                                  
  bgcolor aload pop setrgbcolor        % draw line in dash pattern in backgnd             
  branch-width setlinewidth                                                               
  branch-dash aload pop setdash                                                           
  end1x end1y moveto end2x end2y lineto                                                   
  stroke                                                                                  
  end2y end1y sub                                                                         
  end2x end1x sub                                                                         
  atan                                 % calculate angle of line                          
  end1x end2x sub 2 div end2x add                                                         
  end1y end2y sub 2 div end2y add                                                         
  grestore                                                                                
} def                                                                                     
                                                                                          
% MARKER 18.0 *******************                                                         
                                                                                          
%  place bus starting at position x y at angle                                            
%  x y shape-index scale puVolts baseKv  objacbus =>                                      
%                                                                                         
/objacbus                                                                                 
{                                                                                         
  gsave                                                                                   
   getBusOvldClr /buscolor exch def    % getBusOvldClr takes baseKv and puVolts from stack
                                       %  and returns with bus-color                      
  /bsScale exch def                    % scale available for bus definitions              
  /shapeIndex exch def                 % 2-character bus shape identifier                 
                                                                                          
  translate                            % translate to the x y coordinates on stack        
  bsScale 0 eq {/bsScale 1 def} if     % define default scale factor as 1                 
  0 0 moveto                                                                              
                                                                                          
  0 1 1                                % beginning of locate and print a bus shape        
  {                                    % beginning of locate and print a bus shape        
                                                                                          
%----------------- The enclosed code may be customized at the users pleasure -----        
                                                                                          
      shapeIndex (  ) eq               % begin drawing circle bus                         
      {                                                                                   
      [] 0 setdash                                                                        
      obj-line-width setlinewidth                                                         
      newpath                          % clear current point so it doesn't show           
      0 0 bus-radius 0 360 arc                                                            
      gsave                                                                               
      buscolor aload pop setrgbcolor    % set backgroung color                            
      fill                                                                                
      grestore                                                                            
      fgcolor aload pop setrgbcolor    % set foreground color                             
      exit                                                                                
      } if                             % done drawing circle bus                          
                                                                                          
      shapeIndex (VB) eq               % begin drawing verticle bar                       
      {                                                                                   
      [] 0 setdash                                                                        
      obj-line-width setlinewidth                                                         
      newpath                          % clear current point so it doesn't show           
      -.075  cmtr  -1 cmtr bsScale mul moveto                                             
      -.075  cmtr   1 cmtr bsScale mul lineto                                             
       .075  cmtr   1 cmtr bsScale mul lineto                                             
       .075  cmtr  -1 cmtr bsScale mul lineto                                             
      closepath                                                                           
      gsave                                                                               
      buscolor aload pop setrgbcolor    % set backgroung color                            
      fill                                                                                
      grestore                                                                            
      fgcolor aload pop setrgbcolor    % set foreground color                             
      exit                                                                                
      } if                             % done drawing verticle bar                        
                                                                                          
      shapeIndex (HB) eq               % begin drawing horizontal bar                     
      {                                                                                   
      [] 0 setdash                                                                        
      obj-line-width setlinewidth                                                         
      newpath                          % clear current point so it doesn't show           
      -1 cmtr bsScale mul  -.075  cmtr moveto                                             
       1 cmtr bsScale mul  -.075  cmtr lineto                                             
       1 cmtr bsScale mul   .075  cmtr lineto                                             
      -1 cmtr bsScale mul   .075  cmtr lineto                                             
      closepath                                                                           
      gsave                                                                               
      buscolor aload pop setrgbcolor    % set backgroung color                            
      fill                                                                                
      grestore                                                                            
      fgcolor aload pop setrgbcolor    % set foreground color                             
      exit                                                                                
      } if                             % done drawing horizontal bar                      
                                                                                          
      shapeIndex (XX) eq               % begin drawing horizontal bar                     
      {                                                                                   
      [] 0 setdash                                                                        
      5              setlinewidth                                                         
      newpath                          % draw over any existing buses                     
      -0.125 inch -.125 inch moveto                                                       
       0.125 inch  .125 inch lineto                                                       
      -0.125 inch  .125 inch moveto                                                       
       0.125 inch -.125 inch lineto                                                       
      fgcolor aload pop setrgbcolor    % set foreground color                             
      exit                                                                                
      } if                             % done drawing horizontal bar                      
                                                                                          
%----------------- The enclosed code may be customized at the users pleasure -----        
                                                                                          
  } for pop                            % end of locate and print a bus shape              
  stroke                                                                                  
  grestore                                                                                
} def                                                                                     
                                                                                          
% MARKER 19.0 *******************                                                         
                                                                                          
%  place bubble starting at position x y                                                  
%  x y shape-index size1 size2 display-flag drawBub => x-text y-text print-flag           
%                                                                                         
/drawBub                                                                                  
{                                                                                         
  gsave                                                                                   
                                                                                          
  /bubFlg exch def                     % 0-show 1-don't show bubble                       
  /bbSz2 exch def                      % size1 for bubble definitions                     
  /bbSz1 exch def                      % size2 for bubble definitions                     
  /shapeIndex exch def                 % 2-character bus shape identifier                 
  /yCordBub  exch def                                                                     
  /xCordBub  exch def                                                                     
  /xTxt xCordBub def                   % set location for test within                     
  /yTxt yCordBub def                   % bubble area when no bubble is drawn              
                                                                                          
  xCordBub yCordBub translate          % translate to the x y coordinates                 
  0 0 moveto                                                                              
                                                                                          
  0 1 1                                % beginning of locate and print a bus shape        
  {                                    % beginning of locate and print a bus shape        
                                                                                          
%----------------- The enclosed code may be customized at the users pleasure -----        
                                                                                          
      bubFlg 0 ne                      % do not draw bubble symbol                        
      { exit } if                                                                         
                                                                                          
      shapeIndex (  ) eq               % begin drawing cartoche bubble                    
      {                                                                                   
      bbSz1 0 eq {/bbSz1 0.80 cmtr def} if   % setup default size for bubble              
      bbSz2 0 eq {/bbSz2 1.50 cmtr def} if   % setup default size for bubble              
      [] 0 setdash                                                                        
      bub-wall-width setlinewidth                                                         
      newpath                          % clear current point so it doesn't show           
      /bbSz3 bbSz2 2 div def                                                              
      bbSz3 neg 0 bbSz1 90 270 arc                                                        
      bbSz3 bbSz1 neg lineto                                                              
      bbSz3     0 bbSz1 270 90 arc                                                        
      closepath                                                                           
      gsave                                                                               
      bgcolor aload pop setrgbcolor    % set backgroung color                             
      fill                                                                                
      grestore                                                                            
      fgcolor aload pop setrgbcolor    % set foreground color                             
                                                                                          
      /xTxt xTxt  bbSz3  sub           % calculate new x  text coordinates                
        bbSz1 3 div sub def                                                               
      /yTxt yTxt 0.5 cmtr add def      % calculate new y  text coordinates                
                                                                                          
      exit                                                                                
      } if                             % done drawing cartouche bubble                    
                                                                                          
                                                                                          
%----------------- The enclosed code may be customized at the users pleasure -----        
                                                                                          
  } for pop                            % end of locate and print a bus shape              
  stroke                                                                                  
  grestore                                                                                
  xTxt yTxt bubFlg                     % return coords for text and print flag            
} def                                                                                     
                                                                                          
% MARKER 20.0 *******************                                                         
                                                                                          
                                                                                          
% get color (shade) for buses to indicate normal, under-voltage or over-voltage           
% baseKv puVolt > getBusOvldClr > color eg [0 0 0]                                        
%                                                                                         
/getBusOvldClr                                                                            
{                                                                                         
 /baseKv exch def                                                                         
 /puVolt exch def                                                                         
 0 1 VoltLimCount                                                                         
  {                                                                                       
   VoltLim exch get aload pop                                                             
    /vMax     exch def                                                                    
    /vMin     exch def                                                                    
    /hi-range exch def                                                                    
    /lo-range exch def                                                                    
                                                                                          
    baseKv lo-range ge baseKv hi-range lt and                                             
       {puVolt vMin le                                                                    
          {  [0 0 0] }                                                                    
          {puVolt vMax  ge                                                                
               { [0.75 0.75 0.75] }                                                       
               { [1 1 1]          } ifelse                                                
          } ifelse                                                                        
       exit                                                                               
       } if                                                                               
  }for                                                                                    
 vaOpdif 1 eq dgOptyp 5 eq or        % if this is a difference or coordinates only plot,  
 { pop [1 1 1] } if                    % don't "overload code" the bus                    
                                                                                          
} def                                                                                     
                                                                                          
                                                                                          
% MARKER 21.0 *******************                                                         
                                                                                          
                                                                                          
%  place generator starting at angle and several bus radii from position x y at angle     
%* angle x y objgen =>                                                                    
%                                                                                         
/objgen                                                                                   
{                                                                                         
%/volt-ang exch def                                                                       
 /strbot exch def                                                                         
 /strtop exch def                                                                         
 /disp-ang exch def                                                                       
  gsave                                                                                   
  obj-line-width setlinewidth                                                             
  translate                                                                               
  disp-ang rotate                   % let's be consistent with other objects              
  newpath                                                                                 
  0 0 moveto                                                                              
  /center-gen bus-radius 13 mul def                                                       
  center-gen 0 lineto                                                                     
  stroke                                                                                  
%%%% new stuff*********                                                                   
                                                                                          
%print text                                                                               
  fgcolor aload pop setrgbcolor                                                           
  gsave                                                                                   
  bus-radius 5 mul 0 translate                                                            
  disp-ang 90 gt disp-ang 270 le and                                                      
  { 180 rotate } if                    % make sure text always faces up                   
  (\() strbot cvi strbot cvs stringCat (\))stringCat  % add '(' and ')' to reactive gen   
          0 0  prt-text-center-down                                                       
  strtop  cvi strtop cvs 0 0  prt-text-center-up                                          
  grestore                                                                                
%%%% new stuff*********                                                                   
                                                                                          
  newpath                                                                                 
  center-gen 0 translate                                                                  
% volt-ang disp-ang sub rotate                                                            
  [] 0 setdash                                                                            
  obj-line-width setlinewidth                                                             
  /genrad bus-radius 2 mul  def                                                           
  0 0 genrad  000.0 360.0 arc                                                             
  gsave                                                                                   
  bgcolor aload pop setrgbcolor        % set backgroung color                             
  fill                                                                                    
  grestore                                                                                
  fgcolor aload pop setrgbcolor        % set foreground color                             
  stroke                                                                                  
%  1.7 bus-radius mul  0                  moveto                                          
% -0.6 bus-radius mul  0.8 bus-radius mul lineto                                          
% -0.6 bus-radius mul -0.8 bus-radius mul lineto                                          
%fill                                                                                     
%closepath                                                                                
%stroke                                                                                   
                                                                                          
  grestore                                                                                
} def                                                                                     
                                                                                          
                                                                                          
% MARKER 22.0 *******************                                                         
                                                                                          
%  defines a branch-width and branch-dash to be used with setlinewidth and setdash        
%  Base-Kv getLinePattern => -                                                            
%                                                                                         
                                                                                          
/getLinePattern                                                                           
                                                                                          
 {                                                                                        
     /basekv exch def                                                                     
                                                                                          
     0 1 LinePatternCount                                                                 
     {                                                                                    
         LinePattern exch get aload pop                                                   
          /branch-width  exch def                                                         
          /branch-dash   exch def                                                         
          /hi-range      exch def                                                         
          /lo-range      exch def                                                         
                                                                                          
         basekv lo-range ge basekv hi-range lt and { exit } if                            
                                                                                          
     } for                                                                                
                                                                                          
%%%%%  debug stuff %%%%%%%%%%%%%                                                          
% /str 20 string def   %create string vrbl in named str                                   
% basekv str cvs              %convert time to string                                     
% 15 15 moveto                                                                            
% str show             %display usertime in lowerleft                                     
% showpage                                                                                
%%%%%  debug stuff %%%%%%%%%%%%%                                                          
                                                                                          
                                                                                          
 } def                                                                                    
                                                                                          
/getOutPattern                                                                            
                                                                                          
 {                                                                                        
         LinePatternOut  aload pop                                                        
          /branch-width  exch def                                                         
          /branch-dash   exch def                                                         
 } def                                                                                    
                                                                                          
                                                                                          
/getIntPattern                                                                            
                                                                                          
 {                                                                                        
         LinePatternInt  aload pop                                                        
          /branch-width  exch def                                                         
          /branch-dash   exch def                                                         
 } def                                                                                    
                                                                                          
% MARKER 23.0 *******************                                                         
                                                                                          
%  connect all points in array                                                            
%  array drawLine => -                                                                    
%                                                                                         
/drawLine                                                                                 
{                                                                                         
  dup length 2 sub 2 div /count exch def               % get length of array              
                                                                                          
%%%%%  debug stuff %%%%%%%%%%%%%                                                          
% /str 20 string def   %create string vrbl in named str                                   
% count str cvs              %convert time to string                                      
% 15 30 moveto                                                                            
% str show             %display usertime in lowerleft                                     
% showpage                                                                                
%%%%%  debug stuff %%%%%%%%%%%%%                                                          
                                                                                          
  aload pop                            % put array elements in stack                      
                                                                                          
  gsave                                                                                   
  newpath                                                                                 
  moveto                             % the far end coordinates are on top of the stack    
  count cvi { lineto } repeat        % draw lines to remaining coords on the stack        
  gsave                                                                                   
                                                                                          
  bgcolor aload pop setrgbcolor        % draw wide line  in background color              
  [] 0 setdash                                                                            
  branch-width branch-border 3 mul add  setlinewidth                                      
  gsave                                                                                   
  stroke                                                                                  
  grestore                                                                                
                                                                                          
  fgcolor aload pop setrgbcolor        % draw solid line  in foreground color             
  [] 0 setdash                                                                            
  branch-width branch-border add setlinewidth                                             
  stroke                                                                                  
  grestore                                                                                
                                                                                          
  bgcolor aload pop setrgbcolor        % draw line in dash pattern in backgnd             
  branch-width setlinewidth                                                               
  branch-dash aload pop setdash                                                           
  stroke                                                                                  
                                                                                          
  grestore                                                                                
} def                                                                                     
                                                                                          
% MARKER 24.0 *******************                                                         
                                                                                          
                                                                                          
%  connect all points in array                                                            
%  array drawOutage => -                                                                  
%                                                                                         
/drawOutage                                                                               
{                                                                                         
  dup length 2 sub 2 div /count exch def               % get length of array              
                                                                                          
  aload pop                            % put array elements in stack                      
  /end1y exch def                      % processing from far to near end                  
  /end1x exch def                      % ie end1 is far end in array                      
                                                                                          
  gsave                                                                                   
  newpath                                                                                 
                                                                                          
  outageFlag 1 eq {                  % check for all circuits out                         
  end1x end1y moveto                 % draw the line from the far end                     
  count cvi { lineto } repeat        % draw lines to remaining coords on the stack        
  } if                                                                                    
                                                                                          
    outageFlag 2 eq {                  % check for some circuits out, some in             
    count cvi {                        % draw lines to remaining coords on the stack      
      gsave                                                                               
      end1x end1y moveto                                                                  
      /end2y exch def                                                                     
      /end2x exch def                                                                     
                                                                                          
                                                                                          
      /linang                                                                             
      end2y end1y sub                                                                     
      end2x end1x sub                                                                     
      atan                                                                                
      def                                                                                 
                                                                                          
      /linlen                                                                             
      end2y end1y sub dup mul                                                             
      end2x end1x sub dup mul                                                             
      add sqrt                                                                            
      def                                                                                 
                                                                                          
      end1x end1y  translate                                                              
      0 0 moveto                                                                          
      linang rotate                                                                       
                                                                                          
      /mid1x linlen .25 mul def                                                           
      /mid1y curve-offset 2 mul def                                                       
      /mid2x linlen .75 mul def                                                           
      /mid2y curve-offset 2 mul neg def                                                   
                                                                                          
      mid1x mid1y mid2x mid2y linlen 0    curveto                                         
      branch-width setlinewidth                                                           
      branch-dash aload pop setdash                                                       
                                                                                          
      stroke                                                                              
                                                                                          
      /end1x end2x def         % get ready for next segment                               
      /end1y end2y def                                                                    
      grestore                                                                            
                                                                                          
    } repeat                           % draw lines to remaining coords on the stack      
  } if                                                                                    
                                                                                          
                                                                                          
  fgcolor aload pop setrgbcolor      % draw line in dash pattern in foreground            
  branch-width setlinewidth                                                               
  branch-dash aload pop setdash                                                           
  stroke                                                                                  
                                                                                          
  grestore                                                                                
} def                                                                                     
                                                                                          
                                                                                          
% MARKER 25.0 *******************                                                         
                                                                                          
% locateArrow                                                                             
% [x,y coordinates of line] seg-no-for-arrow locateArrow => angle midpoint-X midpoint-Y   
%                                                                                         
                                                                                          
/locateArrow                                                                              
  {                                                                                       
                                                                                          
  1 add 2 mul /lim exch def                                                               
  dup                            % two copies of coords array on stack                    
  length lim sub /lim exch def   % calculate number of coords to skip from 1st copy       
  lim 0 lt {/lim 0 def} if        % check for bad segment number                          
  mark exch                                                                               
  aload pop                      % load coords values from second copy                    
  lim { pop } repeat                                                                      
                                                                                          
  /end2y exch def                                                                         
  /end2x exch def                                                                         
  /end1y exch def                                                                         
  /end1x exch def                                                                         
  cleartomark                                                                             
                                                                                          
  end2y end1y sub /deltaY exch def                                                        
  end2x end1x sub /deltaX exch def                                                        
                                                                                          
% consider a line .lt. 5/72 of an inch (1.7 mm) to be zero length                         
% since deltaXY is length in points **2, check for  25.0                                  
  /deltaXY deltaX deltaX mul deltaY deltaY mul add def                                    
  deltaXY 25.0 le {9999}                      % set flag for 0 length branch              
                  {deltaY deltaX atan}ifelse  % calculate angle of line                   
                                                                                          
  end1x end2x sub 2 div end2x add                                                         
  end1y end2y sub 2 div end2y add                                                         
  } def                                                                                   
                                                                                          
                                                                                          
% txCoords                                                                                
% [x,y coordinates of line] seg-no-for-arrow txCoords => [x,y coords1] [x,y coords2]      
%                                                                                         
                                                                                          
/txCoords                                                                                 
  {                                                                                       
                                                                                          
  dup                                                                                     
  /segNo exch def                %save the segment number                                 
  1 add 2 mul /lim exch def                                                               
                                                                                          
  dup mark exch  dup             % 3 copies of array on stack with mark between 2&3       
                                                                                          
  length dup /lenAry  exch def   % save length of coords from first copy                  
  lim sub /lim exch def          % calculate number of coords to skip from 1st copy       
                                                                                          
  aload pop                      % load coords values from second copy                    
                                                                                          
  lim { pop } repeat                                                                      
                                                                                          
  /end2y exch def                                                                         
  /end2x exch def                                                                         
  /end1y exch def                                                                         
  /end1x exch def                                                                         
                                                                                          
  /endx end1x end2x sub 2 div end2x add def  % get x-coord of arrow                       
  /endy end1y end2y sub 2 div end2y add def  % get y-coord of arrow                       
  cleartomark                                                                             
                                                                                          
  /lim lim 2 add def             % determine how far to roll stack                        
                                                                                          
  aload pop                      %load coords values from third copy                      
                                                                                          
  lenAry lim roll                % put line break point on top of stack                   
                                                                                          
  endx endy endx endy            % put two sets of break point coords on stack            
                                                                                          
  /lenAry lenAry 4 add def       % adjust length of array                                 
                                                                                          
  lenAry lim neg roll            % roll array back                                        
                                                                                          
  /lim lim 2 add def             % determine length of coords2                            
                                                                                          
  lim array astore /coords2 exch def  % define coords2                                    
                                                                                          
  /lim lenAry lim sub def        % determine length of coords1                            
  lim array astore               % put coords1 on stack                                   
  coords2                        % put coords2 on stack                                   
                                                                                          
  } def                                                                                   
                                                                                          
                                                                                          
% MARKER 26.0 *******************                                                         
                                                                                          
%  acLine                                                                                 
%                                                                                         
% [branchCoords] brOvldFlag ovld-value pct-comp arrowSegment flowFlag label1a label1b     
% label2 outageFlag  basekv => acLine => -                                                
%                                                                                         
% [branchCoords] = [x1 y1 .....xn yn] for beginning, turning, and end points              
%                                                                                         
%  Draw an ac line.  This routine calls the appropriate postscript subroutines.           
%                                                                                         
                                                                                          
/acLine                                                                                   
{                                                                                         
  /basekv       exch def                                                                  
  /outageFlag   exch def  % 0 - normal                                                    
                          % 1 - outage all circuits                                       
                          % 2 - outage some circuits                                      
  /label2       exch def                                                                  
  /label1b      exch def                                                                  
  /label1a      exch def                                                                  
  /flowFlag     exch def  % >= 0 - normal; < 0 - reverse arrow (could be Pin)             
  /arrowSegment exch def                                                                  
  /pctCmp       exch def  % get percent compensation                                      
  /brOvld       exch def  % get branch overload value                                     
  /brOvldFlag   exch def  % () - normal: one character e.g. (T) for thermal overload      
  dup                     % save a copy of array to check for illegal length              
  /branchCoords exch def                                                                  
  length 4 ge {           % be sure there are at least two sets of coordinates            
 mark                                                                                     
                                                                                          
  outageFlag 0 eq {                                                                       
  basekv getLinePattern     % select a pattern for a line of a given KV                   
  branchCoords drawLine     % draw an ac line that is in service                          
                                                                                          
  arrowSegment 0 gt {       % arrowSegment <0  means don't show flow                      
    branchCoords arrowSegment locateArrow        % find X-Y & angle of arrow              
    /yArrow exch def                                                                      
    /xArrow exch def                                                                      
    /aArrow exch def                                                                      
    /locFlag 0 def          % start pointer to determine location of overload value       
                                                                                          
    aArrow 9999 ne {        % check flag indicating attempt to draw 0 length branch       
  aArrow xArrow yArrow flowFlag brOvldFlag label1a label1b label2 arrow % draw & label arr
  pctCmp () ne cmpFlg 1 eq and {                                                          
  pctCmp flowFlag aArrow xArrow yArrow srComp % draw series capacitor with compensation (i
    /locFlag 1 def          % overload value must be below series compensation            
  } if                                                                                    
  label2 () ne {/locFlag 2 def} if % overload value must be below [no. parallels]         
  brOvld () ne  {                                                                         
  brOvld locFlag  aArrow xArrow yArrow ovLd    % put overload value on branch             
  } if                                                                                    
    } if                    % end of 0 length branch check                                
    }if                                                                                   
  }if                                                                                     
                                                                                          
%  logic to handle outage line                                                            
  outageFlag 0 ne {                                                                       
  getOutPattern             % select the line outage pattern                              
  branchCoords drawOutage   % draw an ac line that is NOT in service                      
  } if                                                                                    
                                                                                          
 cleartomark                                                                              
  } if                      % end of check for at least two sets of coordinates           
} def                                                                                     
                                                                                          
                                                                                          
% MARKER 27.0 *******************                                                         
                                                                                          
% acTran                                                                                  
%                                                                                         
% [branchCoords] brOvldFlag ovld-value arrowSegment flowFlag label1a label1b label2       
% outageFlag                                                                              
% basekv1 basekv2 strtap1 strtap2 => acTran => -                                          
%                                                                                         
% [branchCoords] = [x1 y1 .....xn yn] for beginning, turning, and end points              
% Draw transformer. This routine calls the appropriate postscript subroutines.            
%                                                                                         
                                                                                          
/acTran                                                                                   
{                                                                                         
  /strtap2      exch def                                                                  
  /strtap1      exch def                                                                  
  /basekv2      exch def                                                                  
  /basekv1      exch def                                                                  
  /outageFlag   exch def  % 0 - normal                                                    
                          % 1 - outage all circuits                                       
                          % 2 - outage some circuits                                      
  /label2       exch def  % tran will use this value                                      
  /label1b      exch def  % arrow will use this value                                     
  /label1a      exch def  % arrow will use this value                                     
  /flowFlag     exch def  % >= 0 - normal; < 0 - reverse arrow (could be Pin)             
  /arrowSegFlag exch def  % > 0 - normal: < 0 - Don't show flow                           
  /arrowSegment arrowSegFlag abs def                                                      
  /brOvld       exch def  % get branch overload value                                     
  /brOvldFlag   exch def  % () - normal: one character e.g. (T) for thermal overload      
   dup                                                                                    
  /branchCoords exch def                                                                  
  length 2 div 1 sub /no-segs exch def  % find number of segments of transformer          
  no-segs 1 ge {           % be sure there are at least two sets of coordinates           
  no-segs arrowSegment lt {/arrowSegment no-segs cvi def} if                              
                                                                                          
 mark                                                                                     
                                                                                          
  outageFlag 0 eq {                                                                       
                                                                                          
  branchCoords arrowSegment txCoords           % get two coords arrays for tx             
  /coords2 exch def                                                                       
  /coords1 exch def                                                                       
                                                                                          
  basekv1 getLinePattern     % select a pattern for a line of a given KV                  
  coords1 drawLine     % draw sending end of tx that is in service                        
                                                                                          
  basekv2 getLinePattern     % select a pattern for a line of a given KV                  
  coords2 drawLine     % draw receiving end of tx that is in service                      
                                                                                          
  branchCoords arrowSegment locateArrow        % find X-Y & angle of arrow                
    /yArrow exch def                                                                      
    /xArrow exch def                                                                      
    /aArrow exch def                                                                      
    /locFlag 0 def          % start pointer to determine location of overload value       
                                                                                          
    aArrow 9999 ne {        % check flag indicating attempt to draw 0 length branch       
  arrowSegFlag 0 gt {                                                                     
                                                                                          
  aArrow xArrow yArrow flowFlag brOvldFlag label1a label1b label2 arrow} if  % draw & labe
                                                                                          
  arrowSegFlag 0 lt { /strtap1 ( ) def /strtap2 ( ) def }if                               
  flowFlag aArrow xArrow yArrow trans          % draw tx with taps (in strtap1 & strtap2) 
  strtap1 ( ) ne tapFlg 1 eq and               % check value of tap1 and tap-flag to print
     {/locFlag 1 def } if                      % overload value must be below taps        
                                                                                          
                                                                                          
  label2 () ne {/locFlag 2 def} if             % overload value must be below [no. paralle
  brOvld locFlag  aArrow xArrow yArrow ovLd    % put overload value on branch             
    } if                    % end of 0 length branch check                                
                                                                                          
  }if                                                                                     
                                                                                          
%  logic to handle outage line HERE                                                       
                                                                                          
  outageFlag 0 ne {                                                                       
  getOutPattern             % select the line outage pattern                              
  branchCoords drawOutage   % draw an ac transformer that is NOT in service               
  /strtap2      ( )  def                                                                  
  /strtap1      ( )  def                                                                  
  outageFlag 1 eq {                                                                       
    branchCoords arrowSegment locateArrow        % find X-Y & angle of arrow              
    /yArrow exch def                                                                      
    /xArrow exch def                                                                      
    /aArrow exch def                                                                      
    aArrow 9999 ne {        % check flag indicating attempt to draw 0 length branch       
    flowFlag aArrow xArrow yArrow trans }if      % draw tx with taps (in strtap1 & strtap2
    } if                    % end of 0 length branch check                                
  } if                                                                                    
                                                                                          
                                                                                          
 cleartomark                                                                              
  } if                      % end of check for at least two sets of coordinates           
} def                                                                                     
                                                                                          
% MARKER 28.0 *******************                                                         
                                                                                          
%  areaInt                                                                                
%                                                                                         
% [branchCoords] arrowSegment valu1 valu2 valu3 =>  areaInt=> -                           
%                                                                                         
% [branchCoords] = [x1 y1 .....xn yn] for beginning, turning, and end points              
%                                                                                         
%  Draw an interchange line.  This routine calls  postscript subroutines.                 
%                                                                                         
                                                                                          
/areaInt                                                                                  
{                                                                                         
  /valu3        exch def                                                                  
  /valu2        exch def                                                                  
  /valu1        exch def                                                                  
  /arrowSegment exch def                                                                  
  dup                     % save a copy of array to check for illegal length              
  /branchCoords exch def                                                                  
  length 4 ge {           % be sure there are at least two sets of coordinates            
 mark                                                                                     
                                                                                          
  getIntPattern             % select a pattern for interchange line                       
  branchCoords drawLine     % draw interchange line                                       
                                                                                          
  arrowSegment 0 gt {       % arrowSegment <0  means don't show flow                      
    branchCoords arrowSegment locateArrow        % find X-Y & angle of arrow              
    /yArrow exch def                                                                      
    /xArrow exch def                                                                      
    /aArrow exch def                                                                      
                                                                                          
    aArrow 9999 ne {        % check flag indicating attempt to draw 0 length branch       
                                                                                          
    /aroSep 1 cmtr def                                                                    
    aArrow 90 gt aArrow 270 le and                                                        
    {/aroSep -1 cmtr def}if                                                               
    /Xsi aArrow cos aroSep neg mul xArrow add def        % get coords for Sched Int       
    /Ysi aArrow sin aroSep neg mul yArrow add def        % get coords for Sched Int       
    /Xcf aArrow cos aroSep     mul xArrow add def        % get coords for Circ Flo        
    /Ycf aArrow sin aroSep     mul yArrow add def        % get coords for Circ Flo        
                                                                                          
    aArrow Xsi    Ysi     0  valu1   (SI)  intArrow      % draw & label arrow             
    aArrow xArrow yArrow  0  valu2   (AI)  intArrow      % draw & label arrow             
    aArrow Xcf    Ycf     0  valu3   (CF)  intArrow      % draw & label arrow             
                                                                                          
    } if                    % end of 0 length branch check                                
  }if                                                                                     
                                                                                          
                                                                                          
 cleartomark                                                                              
  } if                      % end of check for at least two sets of coordinates           
} def                                                                                     
                                                                                          
                                                                                          
                                                                                          
% MARKER 29.0 *******************                                                         
                                                                                          
                                                                                          
% acBus                                                                                   
%                                                                                         
% [bus array] [generation array] [reactance array] [name array] [flags array]=> acBus=> - 
% [bus array] =        [x-coord y-coord shapeIndex scaleFactor per-unit-voltage base-kv]  
% [generation array] = [display-angle (pgen) (qgen)]                                      
% [reactance array] =  [display-angle value-{real number with sign} (react-used) (react-ma
% [name array] =       [ [(name) (voltage-angle)] x-coord y-coord key-to-voltage-location]
                       % key = 1 => print voltage above bus                               
                       % key = 2 => print voltage right of bus                            
                       % key = 3 => print voltage below bus                               
                       % key = 4 => print voltage left of bus                             
                       % key = 5 => do not print voltage                                  
                       % key = 6 => print voltage etc. but no bus name                    
                                                                                          
% [flags array] =      [bus-symbol generation  reactance name voltage]                    
/acBus                                                                                    
{                                                                                         
  /flgArray exch def                                                                      
  /namArray exch def                                                                      
  /reaArray exch def                                                                      
  /genArray exch def                                                                      
  /busArray exch def                                                                      
                                                                                          
  flgArray aload pop                                                                      
  /namFlg exch def                                                                        
  /reaFlg exch def                                                                        
  /genFlg exch def                                                                        
  /busFlg exch def                                                                        
                                                                                          
                                                                                          
   busArray aload pop pop pop pop pop                                                     
   /y-bus exch def  % get x-bus coordinate                                                
   /x-bus exch def  % get y-bus coordinate                                                
                                                                                          
  genFlg 1 eq                                                                             
    { x-bus y-bus                        % put x & y coordinates of bus on stack          
      genArray aload pop objgen          % draw generation symbol                         
    } if                                                                                  
                                                                                          
  reaFlg 1 eq                                                                             
    { reaArray  aload pop                                                                 
    /label2  exch def                                                                     
    /label1  exch def                                                                     
    /react   exch def                                                                     
    /disp-ang exch def                                                                    
                                                                                          
    react 0 ge { disp-ang x-bus y-bus label1 label2 capacitor} if  % draw a capacitor     
    react 0 lt { disp-ang x-bus y-bus label1 label2 reactor  } if  % draw a reactor       
    } if                                                                                  
                                                                                          
  busFlg 1 eq { busArray aload pop objacbus } if   % draw the bus                         
                                                                                          
 namFlg 1 eq {  % Paul Ferron can print all voltages by making this a comment             
                                                                                          
    namArray aload pop                                                                    
    /key-loc exch def                                                                     
    key-loc 1 eq { prt-text-up}        if  % print voltage above name                     
    key-loc 2 eq { prt-bus-text-right} if  % print voltage right of name                  
    key-loc 3 eq { prt-bus-text-down}  if  % print voltage below name                     
    key-loc 4 eq { prt-bus-text-left}  if  % print voltage left of name                   
                                                                                          
    key-loc 5 eq {                         % print only bus name                          
       /y-volt exch def                    % save coordinates for later use               
       /x-volt exch def                                                                   
       dup                                 % get another copy of text array               
       length 1 sub /newLen exch def       % get No elements to be deleted                
       newLen 0 ge {                                                                      
         aload pop                                                                        
         newLen {pop} repeat                 % delete voltage etc. from array             
         1 array astore                      % store new array for printing               
                                                                                          
         x-volt y-volt                       % put coordinates back on stack              
         prt-text-up}                                                                     
         {pop} ifelse                                                                     
       } if                                                                               
                                                                                          
    key-loc 6 eq {                         % discard (bus name) in array                  
       /y-volt exch def                    % save coordinates for later use               
       /x-volt exch def                                                                   
       dup                                 % get another copy of text array               
       length /lenAry exch def             % get length of array                          
       /newLen lenAry 1 sub def            % get length of new array                      
       aload pop                                                                          
       lenAry -1 roll pop                  % delete bus name from array                   
       newLen array astore                 % store new array for printing                 
                                                                                          
       x-volt y-volt                       % put coordinates back on stack                
       prt-text-up}    if                  % print only the voltage                       
                                                                                          
    } if   % Paul Ferron can print all voltages by making this a comment                  
                                                                                          
} def                                                                                     
                                                                                          
% MARKER 30.0 *******************                                                         
                                                                                          
% areaBub                                                                                 
%                                                                                         
% [bubble array] (area-name) [text array] => areaBub => -                                 
% [bubble array] = [x-coord y-coord shapeIndex size1 size2 display-flag]                  
% [text array] =   [(LOAD   load) (LOSS  loss) (GEN  gen) (SI   si)]                      
                                                                                          
/areaBub                                                                                  
{                                                                                         
  /txtArray exch def                                                                      
  /areaName exch def                                                                      
% /bubArray exch def                  % bubble array is ready for loading                 
  gsave                                                                                   
    aload pop drawBub                 % draw bubble                                       
    /bubFlg exch def                  % get bubble print flag                             
    /yTxt   exch def                  % get y coord for text                              
    /xTxt   exch def                  % get x coord for text                              
                                                                                          
     xTxt yTxt  moveto                % print the area name                               
     /Helvetica-Bold findfont 9 scalefont setfont                                         
     areaName show                                                                        
     /yTxt yTxt .03 cmtr sub def                                                          
                                                                                          
     /Courier-Bold findfont 8 scalefont setfont                                           
  bubFlg 0 eq                                                                             
    {txtArray  xTxt yTxt prt-text-down} if      % print area values                       
  grestore                                                                                
} def                                                                                     
                                                                                          
                                                                                          
% MARKER 31.0 *******************                                                         
                                                                                          
                                                                                          
%                                                                                         
% CordCmnt                                                                                
%                                                                                         
% (string) xcord ycord  => CordCmnt => -                                                  
%                                                                                         
/CordCmnt                                                                                 
{                                                                                         
  /yCordCmnt exch def                                                                     
  /xCordCmnt exch def                                                                     
% comment string remains on stack                                                         
  xCordCmnt 0 eq yCordCmnt 0 eq and                                                       
  { newpath                                                                               
    0 0 moveto                                                                            
    dup                                                                                   
    false charpath flattenpath pathbbox                                                   
    text-spacing add                                                                      
    yCom exch sub                      % upper right y                                    
    /yCom exch def                                                                        
    pop                                % upper right x                                    
    pop                                % lower left y                                     
    pop                                % lower left x                                     
  }                                                                                       
  {/xCom xCordCmnt def                                                                    
   /yCom yCordCmnt def                                                                    
  } ifelse                                                                                
  newpath                                                                                 
  xCom yCom moveto                                                                        
  show                                                                                    
                                                                                          
} def                                                                                     
                                                                                          
%                                                                                         
% CordUcmt                                                                                
%                                                                                         
% (string) CordUcmt => -                                                                  
%                                                                                         
/CordUcmt                                                                                 
{                                                                                         
% comment string remains on stack                                                         
  /Courier findfont 9 scalefont setfont                                                   
    newpath                                                                               
    0 0 moveto                                                                            
    dup                                                                                   
    false charpath flattenpath pathbbox                                                   
    text-spacing add                                                                      
    y-cmnt exch sub                      % upper right y                                  
    /y-cmnt exch def                                                                      
    pop                                % upper right x                                    
    pop                                % lower left y                                     
    pop                                % lower left x                                     
  newpath                                                                                 
  x-cmnt y-cmnt moveto                                                                    
  show                                                                                    
} def                                                                                     
                                                                                          
%                                                                                         
% stringCat                                                                               
% concatenate string1 and string2 into string1-string2                                    
%                                                                                         
% (string1) (string2) stringCat=> new-string                                              
%                                                                                         
/stringCat                                                                                
{                                                                                         
 /str2 exch def                                                                           
 /str1 exch def                                                                           
 str1 length dup /lngstr exch def      % get length of string1                            
 str2 length  add string               % put new-string on stack                          
 /newString exch def                   % name the new-string                              
 newString 0 str1 putinterval          % put string1 on new-string                        
 newString lngstr str2 putinterval     % put string2 on new-string                        
 newString                             % put new-string onstack                           
} def                                                                                     
                                                                                          
% MARKER 32.0 *******************                                                         
%                                                                                         
% allow for putting powerflow state on diagram                                            
% ostates oStates                                                                         
/oStates                                                                                  
  {                                                                                       
 /ostates exch def                                                                        
 ostates 5 lt { (NO SOLUTION)  }    if                                                    
 ostates 6 gt { (FAILED SOLUTION) } if                                                    
                                                                                          
 ostates 5 lt ostates 6 gt or {                                                           
 gsave                                                                                    
                                                                                          
 x-cmnt 0.5 cmtr lt y-cmnt 1.0 cmtr lt or                                                 
 { /x-cmnt 1.0 cmtr def /y-cmnt 1.5 cmtr def } if                                         
/Helvetica-Bold findfont 09 scalefont setfont                                             
    newpath                                                                               
    0 0 moveto                                                                            
    dup                                                                                   
    false charpath flattenpath pathbbox                                                   
    text-spacing add                                                                      
    y-cmnt exch sub                      % upper right y                                  
    /y-cmnt exch def                                                                      
    pop                                % upper right x                                    
    pop                                % lower left y                                     
    pop                                % lower left x                                     
  newpath                                                                                 
  x-cmnt y-cmnt moveto                                                                    
  show                                                                                    
 grestore} if                                                                             
  }def                                                                                    
currentdict                                                                               
                                                                                          
%%EndProlog                                                                               
gsave
initPost
 1 0 1 1 0 0 setOpt1
 1 0 setOpt2
  0 20 setOpt3
   1.00   1.00 setScale
   0.20 cmtr    0.00 cmtr  translate
   20.49 cmtr    28.70 cmtr (T)  1 border
   13.20 cmtr     5.25 cmtr    20.00 cmtr     0.70 cmtr  boxLoc
   13.40 cmtr     4.12 cmtr  caseLoc
   13.50 cmtr     4.50 cmtr  cmntLoc
   20.49 cmtr    28.70 cmtr  sizeLoc
   11.00 cmtr     5.25 cmtr  legndLoc
[   8.87 cmtr  21.29 cmtr     
  8.62 cmtr  18.47 cmtr 
 ]
()  ()                             ()       1        1 ( 101 (-3 ) )             ()                        ()      0   500 acLine
[   8.87 cmtr  21.29 cmtr     
  5.06 cmtr  22.59 cmtr 
 ]
()  ()                             ()       1       -1 ( 0 (0 ) )                ()                        ()      0   500 acLine
[   8.87 cmtr  21.29 cmtr  (  )    0.00  1.000 500.0 ]                          
[  72.0 ( 1000) (   57) ]                                                       
[   0.0   -60 (  -60) (  -60) ]                                                 
[[ (CTY TD1      ) (500     )                                           ]   9.81 cmtr  21.49 cmtr 3 ]  
[  1 1 0 1 ] acBus                                                              
[  14.36 cmtr  20.02 cmtr     
 14.11 cmtr  18.19 cmtr 
 ]
()  ()                              1        1 ( 209 (59 ) )             ()                        ()      0
     20   500 (20.00)    (500.00)   acTran
[  14.36 cmtr  20.02 cmtr  (  )    0.00  1.100  20.0 ]                          
[  29.0 (  209) (   59) ]                                                       
[  35.0     0 (    0) (    0) ]                                                 
[[ (GEN TD1      ) (22.0     )                                          ]  14.92 cmtr  19.74 cmtr 3 ]  
[  1 1 0 1 ] acBus                                                              
[  14.11 cmtr  18.19 cmtr     
  8.62 cmtr  18.47 cmtr 
 ]
()  ()                             ()       1        1 ( 209 (20 ) )             ()                        ()      0   500 acLine
[  14.11 cmtr  18.19 cmtr  (  )    0.00  1.063 500.0 ]                          
[  75.0 (    0) (    0) ]                                                       
[  84.0     0 (    0) (    0) ]                                                 
[[ (HS  TD1      ) (532     )                                           ]  14.11 cmtr  17.68 cmtr 3 ]  
[  1 0 0 1 ] acBus                                                              
[   8.62 cmtr  18.47 cmtr  (  )    0.00  0.978 500.0 ]                          
[  38.0 (    0) (    0) ]                                                       
[ 141.0    96 (   96) (   96) ]                                                 
[[ (LOD TD1      ) (489     )                                           ]   8.36 cmtr  17.81 cmtr 3 ]  
[  1 0 1 1 ] acBus                                                              
[   5.06 cmtr  22.59 cmtr  (  )    0.00  1.000 500.0 ]                          
[  82.0 ( 1000) (    0) ]                                                       
[ 351.0     0 (    0) (    0) ]                                                 
[[ (SLACK        ) (500     )                                           ]   4.15 cmtr  21.70 cmtr 3 ]  
[  1 1 0 1 ] acBus                                                              
     5 oStates
 /Helvetica-Bold findfont 10 scalefont setfont
 (TESTGOV       4/27/ 2     IPF  327              )  caseId
 /Helvetica-Bold findfont 08 scalefont setfont
 (TEST-WSCC-DATA       ) descId
 vaOpdif 1 eq{
 /Helvetica-Bold findfont 10 scalefont setfont
 (TESTGOV       4/27/ 2     IPF  327              )  caseIdbg
 /Helvetica-Bold findfont 08 scalefont setfont
 (TEST-WSCC-DATA          ) descIdbg
 } if
 /Helvetica findfont 07 scalefont setfont
 (Powerflow run at  1:17:42           ) baseId
(Diagram Type: P-Q      FLOW: S:PQ  R:-   Plotted: 27-APR-02 Time:  1:23:55 Version:             IPF  327) plotId
(test_gov-P-A4.tmp) cordTxt
( GOVERNOR:  TESTS) CordUcmt
( GOVERNOR AND TURBINE MODELS.) CordUcmt
( GOVERN, PREGOV.) CordUcmt
( CASE RUN USING MOST RECENT) CordUcmt
( IPF AND TSP PROGRAMS.) CordUcmt
grestore
showpage
